{"version":3,"sources":["components/Testing/components/EndPoint/EndPoint.module.scss","redux/reducers/testing-reducer.js","redux/redux-store.js","components/Testing/components/WelcomePoint.jsx","components/Testing/common/RadioButtonField.jsx","scripts/countFormatter.js","components/Testing/components/TestPoint.jsx","components/Testing/components/EndPoint/EndPoint.jsx","components/Testing/Testing.jsx","App.js","serviceWorker.js","index.js","components/Testing/Testing.module.scss","components/Testing/common/RadioButton.module.scss","components/Testing/components/points.module.scss"],"names":["module","exports","SET_USER_ANSWERS","SET_NEXT_CURRENT_QUESTION","DROP_USER_ANSWERS","SET_TESTS_START","SET_TESTS_FINISH","initialState","testName","data","name","testQuestions","questions","questionsQuantity","length","isTestStart","currentQuestion","userAnswers","correctAnswersCounter","checkAnswers","questionsArr","answersArr","map","question","questionId","value","right","currentAnswer","answers","find","answer","countRightAnswers","filter","TestingReducer","state","action","type","rootReducer","combineReducers","form","formReducer","testingReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","__store__","WelcomePoint","setBodyState","testStart","className","style","welcomePoint","welcomePoint__header","label","label_margin","welcomePoint__button","btn","btn_margin","onClick","connect","input","meta","disabled","touched","error","warning","dispatch","radio","radio__label","placeholder","onChange","ms","Promise","resolve","setTimeout","then","submit","onChangeSubmit","declOfNum","number","TestPointForm","reduxForm","handleSubmit","onSubmit","Field","component","RadioButtonField","TestPoint","testPoint","testPoint__windowHeader","testPoint__headerLabel","testPoint__headerLabel_margin","testPoint__question","testPoint__questionLabel","testPoint__questionLabel_margin","testPoint__body_margin","q","key","EndPoint","dropAnswers","getNumberOfCorrectAnswers","useEffect","endPoint","endPoint__margin","endPoint__text","endPoint__link","endPoint__link_margin","setAnswers","testFinish","nextQuestion","useState","bodyState","setState","body","getBody","formData","testingPage","testingBox","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.060a6ebd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"EndPoint_label__k5iLh\",\"testPoint\":\"EndPoint_testPoint__3YmuZ\",\"testPoint__headerLabel\":\"EndPoint_testPoint__headerLabel__2V639\",\"testPoint__questionLabel\":\"EndPoint_testPoint__questionLabel__3yjLJ\",\"welcomePoint\":\"EndPoint_welcomePoint__367Hk\",\"welcomePoint__header\":\"EndPoint_welcomePoint__header__bYbDJ\",\"welcomePoint__button\":\"EndPoint_welcomePoint__button__1_tUs\",\"label_margin\":\"EndPoint_label_margin__K1lch\",\"btn\":\"EndPoint_btn__2_1YT\",\"btn_margin\":\"EndPoint_btn_margin__1lyMD\",\"testPoint__headerLabel_margin\":\"EndPoint_testPoint__headerLabel_margin__11Npn\",\"testPoint__questionLabel_margin\":\"EndPoint_testPoint__questionLabel_margin__KCHoF\",\"testPoint__body_margin\":\"EndPoint_testPoint__body_margin__3YKzw\",\"endPoint\":\"EndPoint_endPoint__16Vnm\",\"endPoint__text\":\"EndPoint_endPoint__text__1GYdn\",\"endPoint__link\":\"EndPoint_endPoint__link__1YVMS\",\"endPoint__link_margin\":\"EndPoint_endPoint__link_margin__2KIs9\",\"endPoint__margin\":\"EndPoint_endPoint__margin__2PolY\"};","import data from '../../data.json'\r\n\r\nconst SET_USER_ANSWERS = 'scrumlogic_app/testing-reducer/SET-USER-ANSWERS'\r\nconst SET_NEXT_CURRENT_QUESTION =\r\n\t'scrumlogic_app/testing-reducer/SET-NEXT-CURRENT-QUESTION'\r\nconst DROP_USER_ANSWERS = 'scrumlogic_app/testing-reducer/DROP-USER-ANSWERS'\r\nconst SET_TESTS_START = 'scrumlogic_app/testing-reducer/SET-TESTS-START'\r\nconst SET_TESTS_FINISH = 'scrumlogic_app/testing-reducer/SET-TESTS-FINISH'\r\nconst GET_THE_NUMBER_OF_CORRECT_ANSWERS =\r\n\t'scrumlogic_app/testing-reducer/GET-THE-NUMBER-OF-CORRECT-ANSWERS'\r\n\r\nconst initialState = {\r\n\ttestName: data.name,\r\n\ttestQuestions: data.questions,\r\n\tquestionsQuantity: data.questions.length,\r\n\tisTestStart: false,\r\n\tcurrentQuestion: false,\r\n\tuserAnswers: [],\r\n\tcorrectAnswersCounter: 0,\r\n}\r\n\r\nconst checkAnswers = (questionsArr, answersArr) => {\r\n\tconst createObj = (questionId, value, right) => {\r\n\t\treturn { questionId, value, right }\r\n\t}\r\n\r\n\treturn questionsArr.map(question => {\r\n\t\tconst currentAnswer = question.answers.find(\r\n\t\t\tanswer => answer.value === answersArr[`questionId_${question.questionId}`]\r\n\t\t)\r\n\t\treturn createObj(\r\n\t\t\tquestion.questionId,\r\n\t\t\tcurrentAnswer.value,\r\n\t\t\tcurrentAnswer.right\r\n\t\t)\r\n\t})\r\n}\r\n\r\nconst countRightAnswers = answers => {\r\n\treturn answers.filter(answer => answer.right).length\r\n}\r\n\r\nconst countWrongAnswers = answers => {\r\n\treturn answers.filter(answer => !answer.right).length\r\n}\r\n\r\nconst TestingReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase SET_NEXT_CURRENT_QUESTION: {\r\n\t\t\treturn { ...state, currentQuestion: state.currentQuestion + 1 }\r\n\t\t}\r\n\r\n\t\tcase SET_USER_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tuserAnswers: action.value,\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcase SET_TESTS_START: {\r\n\t\t\treturn { ...state, isTestStart: true, currentQuestion: 1 }\r\n\t\t}\r\n\r\n\t\tcase SET_TESTS_FINISH: {\r\n\t\t\treturn { ...state, isTestStart: false, currentQuestion: false }\r\n\t\t}\r\n\r\n\t\tcase DROP_USER_ANSWERS: {\r\n\t\t\treturn { ...state, userAnswers: [], correctAnswersCounter: 0 }\r\n\t\t}\r\n\r\n\t\tcase GET_THE_NUMBER_OF_CORRECT_ANSWERS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcorrectAnswersCounter: countRightAnswers(\r\n\t\t\t\t\tcheckAnswers(state.testQuestions, state.userAnswers)\r\n\t\t\t\t),\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const nextQuestion = () => ({ type: SET_NEXT_CURRENT_QUESTION })\r\n\r\nexport const setAnswers = value => ({ type: SET_USER_ANSWERS, value })\r\n\r\nexport const testStart = () => ({ type: SET_TESTS_START })\r\n\r\nexport const testFinish = () => ({ type: SET_TESTS_FINISH })\r\n\r\nexport const dropAnswers = () => ({ type: DROP_USER_ANSWERS })\r\n\r\nexport const getNumberOfCorrectAnswers = () => ({\r\n\ttype: GET_THE_NUMBER_OF_CORRECT_ANSWERS,\r\n})\r\n\r\nexport default TestingReducer\r\n","import { createStore, combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport TestingReducer from './reducers/testing-reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n\tform: formReducer,\r\n\ttestingReducer: TestingReducer,\r\n})\r\n\r\nconst store = createStore(\r\n\trootReducer,\r\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nwindow.__store__ = store\r\n\r\nexport default store\r\n","import React from 'react'\r\nimport style from './points.module.scss'\r\n\r\nconst WelcomePoint = ({ setBodyState, testName, testStart }) => {\r\n\tconst startClickTest = () => {\r\n\t\tsetBodyState(2)\r\n\t\ttestStart()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.welcomePoint}>\r\n\t\t\t<div className={style.welcomePoint__header}>\r\n\t\t\t\t<p className={`${style.label} ${style.label_margin}`}>{testName}</p>\r\n\t\t\t</div>\r\n\t\t\t<div className={style.welcomePoint__button}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName={`${style.btn} ${style.btn_margin}`}\r\n\t\t\t\t\tonClick={startClickTest}\r\n\t\t\t\t>\r\n\t\t\t\t\tПройти тест\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default WelcomePoint\r\n","import React from 'react'\r\nimport { submit } from 'redux-form'\r\nimport { connect } from 'react-redux'\r\nimport style from './RadioButton.module.scss'\r\n\r\nconst RadioButtonField = ({\r\n\tinput,\r\n\tlabel,\r\n\ttype,\r\n\tmeta: { touched, error, warning },\r\n\tdisabled,\r\n\tdispatch,\r\n}) => {\r\n\tconst hasError = touched && error\r\n\r\n\tconst onChangeSubmit = () => {\r\n\t\tinput.onChange(input.value)\r\n\t\tconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\r\n\r\n\t\treturn sleep(1).then(() => dispatch(submit('testPoint')))\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={style.radio}>\r\n\t\t\t<label className={style.radio__label}>\r\n\t\t\t\t<input\r\n\t\t\t\t\t{...input}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tplaceholder={'label'}\r\n\t\t\t\t\tvalue={input.value}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\tonChange={() => onChangeSubmit()}\r\n\t\t\t\t/>\r\n\t\t\t\t{input.value}\r\n\t\t\t</label>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default connect()(RadioButtonField)\r\n","export const declOfNum = number => {\r\n\tconst cases = [2, 0, 1, 1, 1, 2]\r\n\tconst titles = ['вопрос', 'вопроса', 'вопросов']\r\n\treturn titles[\r\n\t\tnumber % 100 > 4 && number % 100 < 20\r\n\t\t\t? 2\r\n\t\t\t: cases[number % 10 < 5 ? number % 10 : 5]\r\n\t]\r\n}\r\n","import React from 'react'\r\nimport style from './points.module.scss'\r\nimport RadioButtonField from '../common/RadioButtonField'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { declOfNum } from '../../../scripts/countFormatter'\r\n\r\nconst TestPoint = ({\r\n\tonSubmit,\r\n\ttestQuestions,\r\n\tquestionsQuantity,\r\n\tcurrentQuestion,\r\n}) => {\r\n\t//console.log(testQuestions[currentQuestion - 1]) // -1 т.к. это массив\r\n\tconst question = testQuestions[currentQuestion - 1]\r\n\r\n\treturn (\r\n\t\t<div className={style.testPoint}>\r\n\t\t\t<div className={style.testPoint__windowHeader}>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`${style.testPoint__headerLabel} ${style.testPoint__headerLabel_margin}`}\r\n\t\t\t\t>\r\n\t\t\t\t\tПройдено {currentQuestion} {declOfNum(currentQuestion)} из{' '}\r\n\t\t\t\t\t{questionsQuantity}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style.testPoint__question}>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`${style.testPoint__questionLabel} ${style.testPoint__questionLabel_margin}`}\r\n\t\t\t\t>\r\n\t\t\t\t\tВопрос №{currentQuestion}: {question.question}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className={style.testPoint__body_margin}>\r\n\t\t\t\t{question.answers.map((q, key) => (\r\n\t\t\t\t\t<TestPointForm\r\n\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\tonSubmit={onSubmit}\r\n\t\t\t\t\t\tquestion={question}\r\n\t\t\t\t\t\tvalue={q.value}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst TestForm = ({ handleSubmit, question, value }) => {\r\n\treturn (\r\n\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t<Field\r\n\t\t\t\tname={`questionId_${question.questionId}`}\r\n\t\t\t\ttype='radio'\r\n\t\t\t\tcomponent={RadioButtonField}\r\n\t\t\t\tvalue={value}\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nconst TestPointForm = reduxForm({\r\n\tform: 'testPoint',\r\n})(TestForm)\r\n\r\nexport default TestPoint\r\n","import React, { useEffect } from 'react'\r\nimport { declOfNum } from '../../../../scripts/countFormatter'\r\nimport style from './EndPoint.module.scss'\r\n\r\nconst EndPoint = ({\r\n\tsetBodyState,\r\n\tquestionsQuantity,\r\n\tdropAnswers,\r\n\tgetNumberOfCorrectAnswers,\r\n\tcorrectAnswersCounter,\r\n}) => {\r\n\tuseEffect(() => {\r\n\t\tgetNumberOfCorrectAnswers()\r\n\t})\r\n\r\n\tconst startNewTest = () => {\r\n\t\tsetBodyState(1)\r\n\t\tdropAnswers()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={`${style.endPoint} ${style.endPoint__margin}`}>\r\n\t\t\t<div>\r\n\t\t\t\t<p className={style.endPoint__text}>Тест завершен.</p>\r\n\t\t\t\t<p className={style.endPoint__text}>Вы правильно ответили</p>\r\n\t\t\t\t<p className={style.endPoint__text}>\r\n\t\t\t\t\tна {correctAnswersCounter} {declOfNum(correctAnswersCounter)} из{' '}\r\n\t\t\t\t\t{questionsQuantity}.\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName={`${style.endPoint__link} ${style.endPoint__link_margin}`}\r\n\t\t\t\t\tonClick={() => startNewTest()}\r\n\t\t\t\t>\r\n\t\t\t\t\tПройти тест заново\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default EndPoint\r\n","import React, { useState } from 'react'\r\nimport style from './Testing.module.scss'\r\nimport WelcomePoint from './components/WelcomePoint'\r\nimport TestPoint from './components/TestPoint'\r\nimport EndPoint from './components/EndPoint/EndPoint'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n\tsetAnswers,\r\n\tdropAnswers,\r\n\tgetNumberOfCorrectAnswers,\r\n\ttestFinish,\r\n\ttestStart,\r\n\tnextQuestion,\r\n} from '../../redux/reducers/testing-reducer'\r\n\r\nconst getBody = (\r\n\tbodyState,\r\n\tsetBodyState,\r\n\tonSubmit,\r\n\ttestQuestions,\r\n\ttestName,\r\n\tquestionsQuantity,\r\n\tisTestStart,\r\n\tcurrentQuestion,\r\n\ttestStart,\r\n\tdropAnswers,\r\n\tgetNumberOfCorrectAnswers,\r\n\tcorrectAnswersCounter\r\n) => {\r\n\tswitch (bodyState) {\r\n\t\tcase 1:\r\n\t\t\treturn (\r\n\t\t\t\t<WelcomePoint\r\n\t\t\t\t\tsetBodyState={setBodyState}\r\n\t\t\t\t\ttestName={testName}\r\n\t\t\t\t\ttestStart={testStart}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 2:\r\n\t\t\treturn (\r\n\t\t\t\t<TestPoint\r\n\t\t\t\t\tsetBodyState={setBodyState}\r\n\t\t\t\t\tonSubmit={onSubmit} // ответить на вопрос\r\n\t\t\t\t\ttestQuestions={testQuestions} // массив с вопросами\r\n\t\t\t\t\tquestionsQuantity={questionsQuantity} // общее количество вопросов\r\n\t\t\t\t\tcurrentQuestion={currentQuestion} // текущий вопрос\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tcase 3:\r\n\t\t\treturn (\r\n\t\t\t\t<EndPoint\r\n\t\t\t\t\tsetBodyState={setBodyState}\r\n\t\t\t\t\tquestionsQuantity={questionsQuantity}\r\n\t\t\t\t\tdropAnswers={dropAnswers}\r\n\t\t\t\t\tgetNumberOfCorrectAnswers={getNumberOfCorrectAnswers}\r\n\t\t\t\t\tcorrectAnswersCounter={correctAnswersCounter}\r\n\t\t\t\t/>\r\n\t\t\t)\r\n\t\tdefault:\r\n\t\t\treturn <WelcomePoint setBodyState={setBodyState} />\r\n\t}\r\n}\r\n\r\nconst Testing = ({\r\n\ttestQuestions,\r\n\ttestName,\r\n\tquestionsQuantity,\r\n\tisTestStart,\r\n\tcurrentQuestion,\r\n\tsetAnswers,\r\n\ttestStart,\r\n\ttestFinish,\r\n\tdropAnswers,\r\n\tgetNumberOfCorrectAnswers,\r\n\tcorrectAnswersCounter,\r\n\tnextQuestion,\r\n}) => {\r\n\tconst [bodyState, setState] = useState(1)\r\n\r\n\tconst onSubmit = formData => {\r\n\t\t//console.log(formData)\r\n\r\n\t\tnextQuestion()\r\n\t\tif (currentQuestion === questionsQuantity) {\r\n\t\t\tsetAnswers(formData)\r\n\t\t\ttestFinish()\r\n\t\t\tsetState(3)\r\n\t\t}\r\n\t\t/*\tconsole.log(\r\n\t\t\t`currentQuestion: ${currentQuestion}; questionsQuantity ${questionsQuantity}`\r\n\t\t)*/\r\n\t}\r\n\r\n\tconst body = getBody(\r\n\t\tbodyState,\r\n\t\tsetState,\r\n\t\tonSubmit,\r\n\t\ttestQuestions,\r\n\t\ttestName,\r\n\t\tquestionsQuantity,\r\n\t\tisTestStart,\r\n\t\tcurrentQuestion,\r\n\t\ttestStart,\r\n\t\tdropAnswers,\r\n\t\tgetNumberOfCorrectAnswers,\r\n\t\tcorrectAnswersCounter\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div className={style.testingPage}>\r\n\t\t\t<div className={style.testingBox}>{body}</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\ttestQuestions: state.testingReducer.testQuestions,\r\n\ttestName: state.testingReducer.testName,\r\n\tquestionsQuantity: state.testingReducer.questionsQuantity,\r\n\tisTestStart: state.testingReducer.isTestStart,\r\n\tcurrentQuestion: state.testingReducer.currentQuestion,\r\n\tcorrectAnswersCounter: state.testingReducer.correctAnswersCounter,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n\tsetAnswers,\r\n\ttestStart,\r\n\ttestFinish,\r\n\tdropAnswers,\r\n\tgetNumberOfCorrectAnswers,\r\n\tnextQuestion,\r\n})(Testing)\r\n","import React from 'react'\nimport './App.css'\nimport { Provider } from 'react-redux'\nimport store from './redux/redux-store'\nimport Testing from './components/Testing/Testing'\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<div className='App'>\n\t\t\t\t<Testing />\n\t\t\t</div>\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testingPage\":\"Testing_testingPage__euA05\",\"testingBox\":\"Testing_testingBox__2J5To\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio\":\"RadioButton_radio__1H3zx\",\"radio__label\":\"RadioButton_radio__label__3Nlpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"points_label__34bla\",\"testPoint\":\"points_testPoint__zFpkq\",\"testPoint__headerLabel\":\"points_testPoint__headerLabel__uduyu\",\"testPoint__questionLabel\":\"points_testPoint__questionLabel__31vr-\",\"welcomePoint\":\"points_welcomePoint__2oQTs\",\"welcomePoint__header\":\"points_welcomePoint__header__1B8aq\",\"welcomePoint__button\":\"points_welcomePoint__button__1SvBI\",\"label_margin\":\"points_label_margin__SZd8B\",\"btn\":\"points_btn__2ULf4\",\"btn_margin\":\"points_btn_margin__1WoX7\",\"testPoint__headerLabel_margin\":\"points_testPoint__headerLabel_margin__2S9Ug\",\"testPoint__questionLabel_margin\":\"points_testPoint__questionLabel_margin__ngznp\",\"testPoint__body_margin\":\"points_testPoint__body_margin__215PS\"};"],"sourceRoot":""}